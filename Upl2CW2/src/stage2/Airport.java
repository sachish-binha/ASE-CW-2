/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stage2;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author kinut
 */
public class Airport extends javax.swing.JFrame {

    /**
     * Creates new form Airport
     */
    static ArrayList<Plane> planes;
    static ArrayList<Customer> customers;
    static Queue customerQueue;
    static Desk desk1,desk2;
    static Loader loader;
    
    public Airport() {
        initComponents();
        this.planes=new ArrayList<>();
        this.customers=new ArrayList<>();
        readFiles();
        this.customerQueue=new Queue(50,jListQueue);
        this.desk1=new Desk("Desk 1",txtDesk1);
        this.desk2=new Desk("Desk 2",txtDesk2);
        loader=new Loader();
    }
    private void readFiles(){
        Loader loader=new Loader();
        String[] tempPlanes=loader.readFile("planes.txt");
        for(int i=0;i<tempPlanes.length;i++){
            String[] temp=tempPlanes[i].split(":");
            this.planes.add(new Plane(temp[0],temp[1],Integer.parseInt(temp[2])));
        }
    }
    public static void board(Customer cus){
        System.out.println(cus.getDestination());
        if(cus.getDestination().equals("AB342")){
            StringBuilder sb=new StringBuilder();
            Plane plane=planes.get(0);
            plane.board(cus);
            sb.append("\t\t"+plane.getName()+"\n");
            loader.appendData("logs.txt","\t\t"+plane.getName()+"\n");
            sb.append(plane.getNumberBoarded()+" checked in out of "+plane.getCapacity());
            double perc=(double)plane.getNumberBoarded()/(double)plane.getCapacity()*(double)100;
            System.out.println(plane.getNumberBoarded()+" / "+plane.getCapacity()+"="+perc);
            sb.append("\n Hold is "+perc+"% full");
            loader.appendData("logs.txt","\n Hold is "+perc+"% full");
            planes.remove(0);
            planes.add(0, plane);
            txtPlane1.setText(sb.toString());

        }else if(cus.getDestination().equals("DC123")){
            StringBuilder sb=new StringBuilder();
            Plane plane=planes.get(1);
            plane.board(cus);
            sb.append("\t\t"+plane.getName()+"\n");
            sb.append(plane.getNumberBoarded()+" checked in out of "+plane.getCapacity());
            double perc=(double)plane.getNumberBoarded()/(double)plane.getCapacity()*(double)100;
            System.out.println(plane.getNumberBoarded()+" / "+plane.getCapacity());
            sb.append("\n Hold is "+perc+"% full");
            planes.remove(1);
            planes.add(1, plane);
            txtPlane2.setText(sb.toString());
            loader.appendData("logs.txt",sb.toString());
        }else{
            StringBuilder sb=new StringBuilder();
            Plane plane=planes.get(2);
            plane.board(cus);
            sb.append("\t\t"+plane.getName()+"\n");
            sb.append(plane.getNumberBoarded()+" checked in out of "+plane.getCapacity());
            DecimalFormat dcf=new DecimalFormat("#.##");
            double perc=(double)plane.getNumberBoarded()/(double)plane.getCapacity()*(double)100;
            sb.append("\n Hold is "+dcf.format(perc)+"% full");
            System.out.println(plane.getNumberBoarded()+" / "+plane.getCapacity());
            planes.remove(2);
            planes.add(2, plane);
            txtPlane3.setText(sb.toString());
            loader.appendData("logs.txt",sb.toString());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListQueue = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDesk1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDesk2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtPlane1 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtPlane2 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtPlane3 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jListQueue);

        jLabel1.setText("QUEUE");

        txtDesk1.setColumns(20);
        txtDesk1.setRows(5);
        jScrollPane2.setViewportView(txtDesk1);

        txtDesk2.setColumns(20);
        txtDesk2.setRows(5);
        jScrollPane3.setViewportView(txtDesk2);

        txtPlane1.setColumns(20);
        txtPlane1.setRows(5);
        jScrollPane4.setViewportView(txtPlane1);

        txtPlane2.setColumns(20);
        txtPlane2.setRows(5);
        jScrollPane5.setViewportView(txtPlane2);

        txtPlane3.setColumns(20);
        txtPlane3.setRows(5);
        jScrollPane6.setViewportView(txtPlane3);

        jLabel2.setText("DESK 1");

        jLabel3.setText("DESK 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(351, 351, 351))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(38, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(177, 177, 177))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Airport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Airport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Airport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Airport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        Airport airport=new Airport();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                airport.setVisible(true);
            }
        });
        customerQueue.start();
        try {
            Thread.sleep(3000);
        } catch (InterruptedException ex) {
            Logger.getLogger(Airport.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try{
            synchronized(customerQueue){
                desk1.start();
                desk2.start();
            }
            
            //desk1.join();
            //desk2.join();
        }catch(Exception e){
            System.out.println(e);
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jListQueue;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea txtDesk1;
    private javax.swing.JTextArea txtDesk2;
    static private javax.swing.JTextArea txtPlane1;
    static private javax.swing.JTextArea txtPlane2;
    static private javax.swing.JTextArea txtPlane3;
    // End of variables declaration//GEN-END:variables
}
